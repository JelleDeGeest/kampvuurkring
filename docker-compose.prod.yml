services:
  frontend:
    container_name: frontend-prod
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "0.0.0.0:${PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable
      - PAYLOAD_SECRET=${PAYLOAD_SECRET}
      - PAYLOAD_PUBLIC_SERVER_URL=${PAYLOAD_PUBLIC_SERVER_URL:-http://localhost:3000}
      - NEXT_PUBLIC_SERVER_URL=${NEXT_PUBLIC_SERVER_URL:-http://localhost:3000}
      - PAYLOAD_PUBLIC_DRAFT_SECRET=${PAYLOAD_PUBLIC_DRAFT_SECRET}
      - NEXT_PUBLIC_DRAFT_SECRET=${NEXT_PUBLIC_DRAFT_SECRET}
      - REVALIDATION_KEY=${REVALIDATION_KEY}
      - NEXT_PRIVATE_REVALIDATION_KEY=${NEXT_PRIVATE_REVALIDATION_KEY}
      - HOSTNAME=0.0.0.0
    volumes:
      - ./frontend/media:/app/media
      - ./frontend/media-leiding:/app/media-leiding
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  db:
    container_name: postgres-prod
    image: supabase/postgres:15.1.0.147
    restart: unless-stopped
    ports:
      - "0.0.0.0:${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Supabase Studio for production database management
  postgres-meta:
    container_name: supabase-meta-prod
    image: supabase/postgres-meta:v0.80.0
    restart: unless-stopped
    environment:
      PG_META_PORT: 8080
      PG_META_DB_HOST: db
      PG_META_DB_PORT: 5432
      PG_META_DB_NAME: ${POSTGRES_DB}
      PG_META_DB_USER: postgres
      PG_META_DB_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - app-network
    depends_on:
      - db

  studio:
    container_name: supabase-studio-prod
    image: supabase/studio:20240422-5cf8f30
    restart: unless-stopped
    ports:
      - "0.0.0.0:${STUDIO_PORT:-54323}:3000"
    environment:
      STUDIO_PG_META_URL: http://postgres-meta:8080
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DEFAULT_ORGANIZATION_NAME: "Scouts Sint-Johannes"
      DEFAULT_PROJECT_NAME: "Kampvuurkring Production"
      SUPABASE_URL: ${PAYLOAD_PUBLIC_SERVER_URL:-http://localhost:3000}
      SUPABASE_PUBLIC_URL: ${PAYLOAD_PUBLIC_SERVER_URL:-http://localhost:3000}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_KEY}
      NEXT_PUBLIC_ENABLE_LOGS: false
      NEXT_ANALYTICS_BACKEND_PROVIDER: postgres
    depends_on:
      - postgres-meta
    networks:
      - app-network

  # Optional: Nginx reverse proxy for production
  # nginx:
  #   container_name: nginx-prod
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./nginx/ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - frontend
  #   networks:
  #     - app-network
  #   restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data: